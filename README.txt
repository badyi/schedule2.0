----------------------------------------INPUT DATA
			"groups.txt" - [имя группы] [количество чел] -  for example: bsbo-13-18 25

			"cabinets.txt" - [номер кабинета] [вместимость] [тип] - for ex: A3 98 3
									1-лекционный
									2- семинарский
									3 - лабораторный
			"hours.txt" - [тип] [id предмета] [часы в минутах]	
				      1- лк
				      2- сем
                                      3- лаб
					     id предметов описаны в самом файле 

Класс hours 
	typeof_cab - вектор для храниния типа кабинета, который нужен для конкретного прдемета[i]
	typeof_sub - индекс это id предмета, при доступе по индексу получаем количество часов даного предмета
	limits_for_d - вектор, хранящий количество повторений предмета в день. индекс = id предмета
	limits_for_w - аналогично предыдущему только за период взята неделя
	
	expand_space - расширение capacity вектора
	memoty_contro - проверяет достаточно ли текущее capacity, елси нет, то вызывает предыдущую функцию

Класс group 
	name - имя группы
	quantity - количество человек
	LessonFlag - 1 - у группы уже есть занятие на эту пару. 0 - нету 
	flow - поток
	
	далее вектора хранящие инофрмацию о парах данной группы
	hm_times_used_d - вектор, хранящий количство пар конкретного предмета за день
	hm_timems_used_w - аналогично для недели
	used - ветктор, который нужен для определеня периодичности повторения прдемета в семестре 
		например, 1- каждую неделю 2 - раз в две недели и тд
Класс cabinet
	number - номер кабинета
	occupied - 1 - занят на данной паре. 0- нет
	checked - 1 - проверен для данной группы. 0 -нет
	type - тип кабинета 1 - лк 2- пр 3- лаб
Класс flow
	аналогичен ~ group

глобально объявленные вектора 
	FLOWS - вектор хранит информацию о потоках (номер потока и колич чел). index вектора = id потока
	groups - вектор хранит все группы
	cabinets - хранит все кабинеты
	flows - (для упрощения я сдеалал определение потока группы по первой букве названия) вектор хранит индентификационные значение потоков
	hours - вектор хранит часы предметов для каждого потока

int recognize_flow - функция распознает поток по индентификатору, если такого нет то ффункция добавляет новое идентификационное значение

void load_groups - функция загружает из файла информацию о всеx группах. создает экземпляры класса group и добавляет в вектор groups

void load_cab - функция загружает из файла информацю о всех кабинетах анологично предыдущий 

void load_hours -функция загружает из файла инф о часах

void combine_groups_hours - функция загружает часы для каждой группы непосредственно в сами группы

void set_limits  - устанавливает периодичность каждого предмета. по формуле limit = minutes / 90 / weeks
									weeks = 16
									for ex: 1440 минут матеши это limit= 1 
									предмет будет повторятся в каждую неделю номер которой при делении на 1 дает остаток 0
									fro ex2: 720 минут xp-программирования это limit = 0.5 
									здесь он расчитает по формуле x*limit = 1 => x =2
									=> предмет будет повторятся в каждую неделю номер которой при делении на 2 дает остаток 0
									те каждую вторую неделю


flag для пар
flag2 доя дней
flag3 -для недель
		- эти три флага нужны для сохранения в файл,чтобы много раз не печатать номер недели номер дня номер пары \\

void save - сохранение в файл 

void cabinets_ch_clear()  - очищает статус проверки кабинетов

vector del хранит ссылки на группы, у которых закончились часы и их нужно удалить 

bool check limits -проверяет повторы предметов за день и неделю

void distr_lucture - находит для поттока на определенный предмет кабинет

void distribute(int ...) распределяет пары группы кабинеты

 
void delete_used_g - удаляет статусы групп(занятости и првоерки)


void distribute() - запускает цикл распределения и контроллирует счет пар .дней .недель 

void sum_flows() - суммирует кол чел на потоке

